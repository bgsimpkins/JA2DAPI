/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package twodapi.core;

import java.awt.Dimension;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**A convenience class that creates and initializes a {@link JFrame} window and {@link Painter}. Unless the painting
 * surface is to be embedded, this is the easiest way to start things.
 *
 * @author bsimpkins
 */
public class Frame2D
{
    public static final int REG_PAINTER = 1;
    public static final int EVENT_DRIVEN_PAINTER = 2;

    private int painterType = REG_PAINTER;

    private Painter painter = null;

    private JFrame frame;

    private final Dimension size;

    /**Creates a new Frame2D based on the specified painter type and window size
     *
     * @param painterType Type of painter(use class constants).
     * @param width Width of window
     * @param height Height of window
     */
    public Frame2D(int painterType,int width, int height)
    {
        if (painterType != REG_PAINTER && painterType != EVENT_DRIVEN_PAINTER)
        {
            System.err.println("Must specifiy a valid painter type (REG_PAINTER or EVENT_DRIVEN_PAINTER)!");
            System.err.println("Exiting!");
            System.exit(1);
        }

        this.painterType = painterType;
        this.size = new Dimension(width,height);

        createFrame(size);

        
    }

    /**Creates a new Frame2D based on the specified {@link Painter} and window size
     *
     * @param painter Non-null <code>Painter</code> object
     * @param width Width of window
     * @param height Height of window
     */
    public Frame2D(Painter painter,int width, int height)
    {
        this.painter = painter;
        this.size = new Dimension(width,height);

        if (painter instanceof GamePainter) painterType = REG_PAINTER;
        else if (painter instanceof EventDrivenPainter) painterType = EVENT_DRIVEN_PAINTER;

        createFrame(size);
    }

    private void createFrame(final Dimension size)
    {
        try
        {
            SwingUtilities.invokeAndWait(new Runnable()
            {
                public void run()
                {
                    frame = new JFrame();
                    frame.setSize(size);
                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                    initPainter();

                    frame.setVisible(true);
                }

            });
        } catch (Exception e){}

        
    }

    private void initPainter()
    {
        JPanel panel = null;

        if (painter==null)
        {
            if (painterType == REG_PAINTER)
            {
                panel = new JPanel();
                painter = new GamePainter(panel);
            }
            else if (painterType == EVENT_DRIVEN_PAINTER)
            {
                if (painter==null) painter = new EventDrivenPainter();

            }
        }

        if (painter instanceof GamePainter)
        {
            if (panel == null)
            {
                panel = new JPanel();
            }

            frame.getContentPane().add(panel);
        }
            
        else if (painter instanceof EventDrivenPainter)
        {
            frame.getContentPane().add((EventDrivenPainter)painter);
        }

    }

    /**Returns the {@link Painter}
     *
     * @return The <code>Painter</code> created by this class
     */
    public Painter getPainter()
    {
        return painter;
    }

    /**Returns the window created by this class
     *
     * @return {@link JFrame}
     */
    public JFrame getFrame()
    {
        return frame;
    }

    /**Returns the {@link Painter} type (class constants)
     *
     * @return painter type
     */
    public int getPainterType()
    {
        return painterType;
    }

    public static void main(String[] args)
    {
        Frame2D main = new Frame2D(Frame2D.REG_PAINTER,200,200);
        Painter painter = main.getPainter();

        String[] exploFiles = new String[]{
            "/images/Explosion/Explosion1.gif",
            "/images/Explosion/Explosion2.gif",
            "/images/Explosion/Explosion3.gif",
            "/images/Explosion/Explosion4.gif",
            "/images/Explosion/Explosion5.gif",
            "/images/Explosion/Explosion6.gif",
            "/images/Explosion/Explosion7.gif",
            "/images/Explosion/Explosion8.gif",
            "/images/Explosion/Explosion9.gif",
            "/images/Explosion/Explosion10.gif",
            "/images/Explosion/Explosion11.gif",
            "/images/Explosion/Explosion12.gif",
            "/images/Explosion/Explosion13.gif",
            "/images/Explosion/Explosion14.gif",
            "/images/Explosion/Explosion15.gif",
            "/images/Explosion/Explosion16.gif"};

        FlipBookSprite explo = new FlipBookSprite(exploFiles);
        Dimension compSize = painter.getComponent().getSize();
        explo.setLocation(compSize.width/2, compSize.height/2);
        explo.setFramesToRenderImage(2);
        explo.animateLoop();

        //explo.setBoundsVisible(true);
        explo.setPainter(painter);
        explo.scale(2f);

        painter.addToPaintList(explo);
    }
}
